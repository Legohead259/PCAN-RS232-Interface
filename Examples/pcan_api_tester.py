from tkinter.constants import FALSE
from PCAN_RS_232 import PCAN_RS_232

print('----------PCAN-RS232 API TESTER-----------')
print('Initializing PCAN module...', end="")
try:
    pcan = PCAN_RS_232('COM1', 57600, 1) # Initialize PCAN module on COM4 USB port @ 57600 baud with a 1 second timeout
    print("done!")
except Exception as e:
    print(e)
    print("FAILED!")
    exit()

print("Device serial number: ", end="")
print(pcan.get_serial_number())
print("Device version information: ", end="")
print(pcan.get_version_info())
print("Device status: ", end="")
print(pcan.get_status_flags())
print()

print("---Testing configuration settings---")
print("Testing ACCEPTANCE CODE REGISTER command...", end="")
print("pass") if pcan.set_acceptance_code_register("00000000") == 1 else print("FAIL!")
print("Testing ACCEPTANCE MASK REGISTER command...", end="")
print("pass") if pcan.set_acceptance_mask_register("FFFFFFFF") == 1 else print("FAIL!")
print("Testing AUTO POLL command...", end="")
print("pass") if pcan.set_auto_poll(True) == 1 else print("Fail!")
print("Testing AUTO STARTUP command...", end="")
print("pass") if pcan.set_auto_startup(False) == 1 else print("Fail!")
print("Testing CAN BITRATE (BTR0/BTR1) command...", end="")
print("pass") if pcan.set_can_bitrate_btr0_btr1("03", "1C") == 1 else print("Fail!")
print("Testing CAN BITRATE (NORMAL) command...", end="")
print("pass") if pcan.set_can_bitrate("6") == 1 else print("Fail!")
print("Testing FILTER MODE command...", end="")
print("pass") if pcan.set_filter_mode(False) == 1 else print("Fail!")
print("Testing TIMESTAMP command...", end="")
print("pass") if pcan.enable_timestamps(False) == 1 else print("Fail!")
print("Testing UART BITRATE command...", end="")
print("pass") if pcan.set_uart_bitrate("2") == 1 else print("Fail!")
print()

print("-----Testing CANbus transmission----")
print("Opening CAN channel...", end="")
print("done") if pcan.open_channel() == 1 else print("Fail!")
print("Sending extended data frame...", end="")
print("pass") if pcan.transmit_extended_message("00012345", "4", "DEADBEEF") == 1 else print("Fail!")
print("Sending extended request frame...", end="")
print("pass") if pcan.transmit_extended_request("00012345", "4") == 1 else print("Fail!")
print("Sending standard data frame...", end="")
print("pass") if pcan.transmit_standard_message("123", "4", "DEADBEEF") == 1 else print("Fail!")
print("Sending standard request frame...", end="")
print("pass") if pcan.transmit_standard_request("123", "4") == 1 else print("Fail!")
print("Closing CAN channel...", end="")
print("done") if pcan.close_channel() == 1 else print("Fail!")
print()

print("-----CLEANING UP-----")
print("Resetting PCAN module to factory defaults...", end="")
print("done") if pcan.write_to_eeprom("1") == 1 else print("Fail!")
print("Flushing serial buffers...", end="")
pcan.empty_buffers()
print("done")
print()
